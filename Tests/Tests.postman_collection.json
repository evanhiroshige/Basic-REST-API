{
	"info": {
		"_postman_id": "3426ec09-4164-46df-b29a-19714ab6cd2d",
		"name": "Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET init",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e0df93f-e6c9-4301-bf52-8ff4a6502776",
						"exec": [
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.globals.set(\"initLength\", jsonData.length);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/objects",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"objects"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Evan Hiroshige",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b556e22b-b0e3-4779-8a4f-449b873c360f",
						"exec": [
							"  var jsonData = pm.response.json();",
							"  ",
							"pm.globals.set(\"uid\", jsonData._id);",
							"",
							"pm.test(\"firstName is correct\", function () {",
							"    pm.expect(jsonData.firstName).to.eql(\"Evan\");",
							"});",
							"pm.test(\"lastName is correct\", function () {",
							"    pm.expect(jsonData.lastName).to.eql(\"Hiroshige\");",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "firstName",
						"value": "Evan",
						"type": "text",
						"disabled": true
					},
					{
						"key": "lastName",
						"value": "Hiroshige",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "firstName",
							"value": "Evan",
							"type": "text"
						},
						{
							"key": "lastName",
							"value": "Hiroshige",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/api/objects",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"objects"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET after POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b66c3f5a-d160-4680-9060-e48ebcd1efe6",
						"exec": [
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Contains posted object\", function () {",
							"    pm.expect(pm.response.text()).to.include(pm.globals.get(\"uid\"));",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    var prevLen = pm.globals.get(\"initLength\");",
							"    pm.expect(jsonData.length).to.eql(prevLen + 1);",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/objects",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"objects"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET object by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b4c1b40f-74fe-4146-9495-845513ff28d0",
						"exec": [
							"var id = pm.globals.get(\"uid\");",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"_id stays the same\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData._id).to.eql(id);",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body('{\"_id\":\"' + id + '\",\"firstName\":\"Evan\",\"lastName\":\"Hiroshige\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/objects/{{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"objects",
						"{{uid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT dob and dod",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "090236b8-3702-4dc9-8f9e-6f068add324f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body('{\"_id\":\"' + pm.globals.get(\"uid\") + '\",\"firstName\":\"Evan\",\"lastName\":\"Hiroshige\",\"dob\":\"4/11/1999\",\"dod\":\"unknown\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "_id",
							"value": "{{uid}}",
							"type": "text"
						},
						{
							"key": "firstName",
							"value": "Evan",
							"type": "text"
						},
						{
							"key": "lastName",
							"value": "Hiroshige",
							"type": "text"
						},
						{
							"key": "dob",
							"value": "4/11/1999",
							"type": "text"
						},
						{
							"key": "dod",
							"value": "unknown",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/api/objects/{{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"objects",
						"{{uid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Evan Hiroshige",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "87c7a318-3fc3-4a0e-a1a3-7d975fd4b2b0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/objects/{{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"objects",
						"{{uid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET object not in db",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69a7946d-f374-42ff-bcb6-00eef7bb1083",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    var id = pm.globals.get(\"uid\"); ",
							"    var url = pm.environment.get(\"url\") +'/api/objects/';",
							"    url = url.replace(':3000', '');",
							"    pm.response.to.have.body('{\"verb\":\"GET\",\"url\":\"'+ url + id +'\",\"message\":\"Could not find object with _id: '+ id + '\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/objects/{{uid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"objects",
						"{{uid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET after DELETE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "99e7ee56-2c18-4979-9cd2-0df031da1667",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Correct length\", function () {",
							"    var jsonData = pm.response.json();",
							"    var prevLength = pm.globals.get(\"initLength\");",
							"    pm.expect(jsonData.length).to.eql(prevLength);",
							"});",
							"pm.test(\"Does not include posted id\", function () {",
							"    pm.expect(pm.response.text()).to.not.include(pm.globals.get(\"uid\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api/objects/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"objects",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR malformed JSON",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	]
}